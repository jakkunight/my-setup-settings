filetype: pseudocode

detect:
    filename: "(\\.psc$)"

rules:
    - constant.number: "\\b[-+]?([1-9][0-9]*|0[0-7]*|0x[0-9a-fA-F]+)([uU][lL]?|[lL][uU]?)?\\b"
    - constant.number: "\\b[-+]?([0-9]+\\.[0-9]*|[0-9]*\\.[0-9]+)([EePp][+-]?[0-9]+)?[fFlL]?"
    - constant.number: "\\b[-+]?([0-9]+[EePp][+-]?[0-9]+)[fFlL]?"
    #- identifier: "[A-Za-z_][A-Za-z0-9_]*[[:space:]]*[(]"
    # ^ this is not correct usage of the identifier color
    - symbol.brackets: "(\\{|\\})"
    - symbol.brackets: "(\\(|\\))"
    - symbol.brackets: "(\\[|\\])"
    - symbol.brackets: "(\\<|\\>)"
    - symbol.operator: "([-+/*=<>!~%?:&|,;.]|[.]{3})"
    - statement: "\\b(INICIO|FIN|RETORNAR|SALTAR|CONTINUAR)\\b"
    - statement: "\\b(SI|ENTONCES|SINO|FINSI|REPETIR|HASTA|MIENTRAS|HACER|FINMIENTRAS|DESDE|FINDESDE|PASO|POR DEFECTO|EN CASO QUE)\\b"
    - statement: "\\b(CONECTAR CON|IMPRIMIR|LEER|GRABAR EN|CONSULTAR|INICIAR SESIÓN EN|MOSTRAR)\\b"
    - statement: "\\b(POW|SQRT|NTHRT|SIN|COS|TAN|SEC|CSC|CTG|ARCSIN|ARCCOS|ARCTAN|ARCCSC|ARCSEC|ARCCTG|EXP|LN|LOG|LOGN|INTEGRAL|DERIVADA)\\b"
    - statement: "\\b(VERDADERO|FALSO)\\b"
    - identifier: "\\b(ARCHIVO|BASE DE DATOS|TABLA|COLUMNA|SISTEMA|RED|SERVIDOR|CLIENTE|DIRECTORIO|IMPRESORA|MOUSE|DISCO)\\b"
    
    #- constant: "\\b(VERDADERO|FALSO)\\b"
    - type: "\\b(FUNCIÓN|OBJETO|ENTERO|NÚMERO|BOOLEANO|TEXTO|CARACTER|VACÍO|BYTE|BIT|CONSTANTE)\\b"

    # - constant: "/[^*]([^/]|(\\\\/))*[^\\\\]/[gim]*"
    - constant: "\\\\[0-7][0-7]?[0-7]?|\\\\x[0-9a-fA-F]+|\\\\[bfnrt'\"\\?\\\\]"

    - identifier: "\\b()\\b"
    - identifier: "\\.([[:alpha:][_]])+([[:alnum:][_]])*"

    - constant.string:
        start: "\""
        end: "\""
        skip: "\\\\."
        rules:
            - constant.specialChar: "\\\\."

    - constant.string:
        start: "'"
        end: "'"
        skip: "\\\\."
        rules:
            - constant.specialChar: "\\\\."

    - constant.string:
        start: "`"
        end: "`"
        rules:
            - constant.specialChar: "\\\\."
            - identifier: "\\x24\\{.*?\\}"

    - constant.bool: "\\b(true|false)\\b"
    - constant.bool.false: "\\b(false)\\b"
    - constant.bool.true: "\\b(true)\\b"

    - comment:
        start: "//"
        end: "$"
        rules:
            - todo: "(TODO|XXX|FIXME)"

    - comment:
        start: "/\\*"
        end: "\\*/"
        rules:
            # function documentation
            - identifier: "\\s\\*\\s.*"
            - todo: "(TODO|XXX|FIXME)"
    - constant.string.url: "(http(s)?|ftp(s)?|chrome|file|git|mysql|exp)://\\*(/)?"
